USE BD_SQLGOFF;

# GROUP BY - группирует данные

# Какова средняя стоимость заказа ?
SELECT AVG(AMOUNT)
FROM ORDERS;

# Какова средняя стоимость заказа для каждого служащего ?
SELECT REP, AVG(AMOUNT)
FROM ORDERS
GROUP BY REP;
# - Заказы делятся на группы, по одной группе для каждого служащего. В каждой группе все заказы имеют одно и тоже
# значение в столбце REP.
# - Для каждой группы вычисляется среднее значение столбца AMOUNT по всем строкам, входящим в группу, и генерируется
# одна итоговая строка результатов. Эта строка содержит значение столбца REP для группы и среднюю стоимость заказа
# для данной группы.

# Запрос, включающий в себя предложение GROUP BY, называется запросом с группировкой, поскольку он объдиняет строки
# исходных таблиц в группы и для каждой группы строк генерирует одну строку таблицы результатов запроса.
# Столбцы, указанные в предложении GROUP BY, называются столбцами группировки, поскольку именно они определяют, по
# какому признаку строки делятся на группы.

# Каков диапазон плановых объемов продаж для каждого офиса ?
SELECT REP_OFFICE, MIN(QUOTA), MAX(QUOTA)
FROM SALESREPS
GROUP BY REP_OFFICE;

# Сколько служащих работает в каждом офисе ?
SELECT REP_OFFICE, COUNT(*)
FROM SALESREPS
GROUP BY REP_OFFICE;

# Сколько клиентов обслуживает каждый служащий ?
SELECT COUNT(DISTINCT CUST_NUM), 'customers for salesrep', CUST_REP
FROM CUSTOMERS
GROUP BY CUST_REP;

# Несколько столбцов группировки
# Подсчитать общую сумму заказов по каждому клиенту для каждого служащего.
SELECT REP, CUST, SUM(AMOUNT)
FROM ORDERS
GROUP BY REP, CUST;
# Приведенный запрос генерирует одну итоговую строку для каждой пары "служащий/клиент".

# WITH ROLLUP - выводит промежуточные итоги
SELECT REP, CUST, SUM(AMOUNT)
FROM ORDERS
GROUP BY REP, CUST WITH ROLLUP;

# Подсчитать общее количество заказов для каждого служащего.
SELECT EMPL_NUM, NAME, SUM(AMOUNT)
FROM ORDERS, SALESREPS
WHERE REP = EMPL_NUM
GROUP BY EMPL_NUM, NAME;



